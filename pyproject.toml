[project]
name = "dragonfly-toolkit"
version = "0.1.0"
dynamic = ["dependencies", "optional-dependencies"]

[project.urls]
repository = "https://github.com/vipyrsec/dragonfly-toolkit"
documentation = "https://docs.vipyrsec.com/dragonfly-toolkit/"

[project.scripts]
dragonfly = "dragonfly_cli.app:app"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic.dependencies]
file = ["requirements/requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements/requirements-dev.txt"] }
tests = { file = ["requirements/requirements-tests.txt"] }
docs = { file = ["requirements/requirements-docs.txt"] }

[tool.ruff]
preview = true
unsafe-fixes = true
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "CPY001", # (Missing copyright notice at top of file)
  "PLC0414", # (Import alias does not rename original package) - Re-exporting
  "UP007", # (Use `X | Y` for type annotations) - Click doesn't support these
]

[tool.ruff.lint.extend-per-file-ignores]
"docs/*" = [
    "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Docs are not modules
]
"tests/*" = [
    "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Tests are not modules
    "S101", # (Use of `assert` detected) - Yes, that's the point
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
